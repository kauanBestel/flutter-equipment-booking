// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter_dotenv/flutter_dotenv.dart';

import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return _androidOptions;
      case TargetPlatform.iOS:
        return _iosOptions;
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static FirebaseOptions get _androidOptions {
    return FirebaseOptions(
      apiKey: dotenv.env['Firebase_API_Key_Android'] ?? '',
      appId: dotenv.env['Firebase_iD_Android'] ?? '',
      messagingSenderId: dotenv.env['Msg'] ?? '',
      projectId: dotenv.env['Project_Id'] ?? '',
      storageBucket: dotenv.env['StorageBucket'] ?? '',
    );
  }

  static FirebaseOptions get _iosOptions {
    return FirebaseOptions(
      apiKey: dotenv.env['Firebase_API_Key_IOS'] ?? '',
      appId: dotenv.env['Firebase_iD_IOS'] ?? '',
      messagingSenderId: dotenv.env['Msg'] ?? '',
      projectId: dotenv.env['Project_Id'] ?? '',
      storageBucket: dotenv.env['StorageBucket'] ?? '',
      iosBundleId: dotenv.env['IOS_BundleID'] ?? '',
    );
  }
}
